#!/usr/bin/env bash

# Shamelessly stolen from https://github.com/beardix/asdf-yq/blob/master/bin/list-all#L7
# Thank you for your great and simple work

set -o errexit
set -o nounset
set -o pipefail

readonly BINARY_NAME="jq"
readonly DOWNLOAD_BASE_URL="https://github.com/stedolan/jq/releases/download"

readonly TMP_DOWNLOAD_DIR="$(mktemp -d)"
trap 'rm -rf "${TMP_DOWNLOAD_DIR?}"' EXIT

error_exit() {
  echo "$1" >&2
  exit "${2:-1}"
}

arch_num() {
  if [ "$(uname -m)" == "x86_64" ]; then
    echo "64"
  else
    echo "32"
  fi
}

platform() {
  local -r os=$(
    case "$(uname | tr '[:upper:]' '[:lower:]')" in
      darwin)  echo "osx-amd64" ;;
      linux)   echo "linux$(arch_num)" ;;
      mingw*)  echo "win$(arch_num)" ;;
      cygwin*) echo "win$(arch_num)" ;;
      *)       echo "unknown$(arch_num)" ;;
    esac
  )

  echo "${os}"
}

install() {
  local -r install_type="$1"
  local -r install_version="$2"
  local -r install_path="$3"
  local -r install_path_bin="${install_path}/bin"
  local -r download_url="${DOWNLOAD_BASE_URL}/${install_version}/${BINARY_NAME}-$(platform)"
  local -r download_path="${TMP_DOWNLOAD_DIR}/${BINARY_NAME}"

  [ "$install_type" != "version" ] && error_exit "Error: source installs are not supported"

  echo "Downloading from ${download_url}"
  if curl -fL -o "$download_path" "$download_url"; then
    echo "Installing binary"
    mkdir -p "$install_path_bin"
    mv "$download_path" "${install_path_bin}/${BINARY_NAME}"
    chmod +x "${install_path_bin}/${BINARY_NAME}"
  else
    error_exit "Error: ${BINARY_NAME} version ${install_version} not found"
  fi
}

#
install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
